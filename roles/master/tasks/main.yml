---
- name: install depences
  apt: pkg={{ item }}
  with_items:
    - gcc
    - g++
    - make
    - nginx
    - mysql-server
    - mysql-client
    - pdns-server
    - pdns-backend-mysql
    - ruby
    - ruby-dev
    - libxml2-dev
    - libxslt-dev
    - libmysqlclient-dev
    - git
    - daemontools

- name: drop tables
  shell:
    mysql pdns -e 'drop table domains; drop table records' && touch /var/tmp/dropped_tables
    creates=/var/tmp/dropped_tables

- name: copy Upstart config file
  template:
    src=etc/init/unicorn.conf.j2
    dest=/etc/init/unicorn.conf

- name: copy PowerDNS config file
  template:
    src=etc/powerdns/pdns.conf.j2
    dest=/etc/powerdns/pdns.conf
    mode=0600
  notify: reload powerdns

- name: disable DNSSEC
  lineinfile:
    dest=/etc/powerdns/pdns.d/pdns.local.gmysql.conf
    regexp=^gmysql-dnssec=
    line=gmysql-dnssec=no
  notify: reload powerdns

- name: remove pdns.simplebind.conf
  file:
    path=/etc/powerdns/pdns.d/pdns.simplebind.conf
    state=absent

- name: install bundler
  shell: gem install bundler --no-ri --no-rdoc

- name: make www directory
  file:
    path={{ document_root }}
    state=directory

- name: clone powerdns-on-rails
  git:
    repo=https://github.com/akagisho/powerdns-on-rails.git
    dest={{ document_root }}/powerdns-on-rails
    version=revised
  notify: restart unicorn
  ignore_errors: True

- name: copy database config file
  copy:
    src=var/www/powerdns-on-rails/config/database.yml
    dest={{ document_root }}/powerdns-on-rails/config/database.yml
  notify: restart unicorn

- name: install powerdns-on-rails
  shell:
    chdir={{ document_root }}/powerdns-on-rails
    bundle install --path vendor/bundle --without test development
    && bundle exec rake db:migrate RAILS_ENV=production
    && bundle exec rake assets:precompile RAILS_ENV=production
    && bundle exec rake db:seed RAILS_ENV=production
    && bundle exec rake generate_secret_token
  notify: restart unicorn

- name: make log directory
  file:
    path=/var/log/powerdns-on-rails
    state=directory

- name: remove nginx default config file
  file:
    path=/etc/nginx/sites-enabled/default
    state=absent
  notify: reload nginx

- name: copy nginx config file
  template:
    src=etc/nginx/conf.d/powerdns-on-rails.conf.j2
    dest=/etc/nginx/conf.d/powerdns-on-rails.conf
  notify: reload nginx

- name: copy master_zones.sh
  copy:
    src=home/dnsops/zone_sync/master_zones.sh
    dest=/home/{{ opsuser }}/zone_sync/master_zones.sh
    owner={{ opsuser }}
    mode=0755

- name: add master_zones.sh to cron
  cron:
    name="master_zones.sh"
    user="{{ opsuser }}"
    job="setlock -n /tmp/master_zones.lock /home/{{ opsuser }}/zone_sync/master_zones.sh"
